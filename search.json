[{"path":"https://microbiomedb.github.io/microbiomeComputations/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://microbiomedb.github.io/microbiomeComputations/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://microbiomedb.github.io/microbiomeComputations/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Danielle Callan. Author, maintainer. Ann Blevins. Author.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Callan D, Blevins (2025). microbiomeComputations: Compute Results Microbiome Analyses. R package version 5.1.3, https://github.com/microbiomeDB/microbiomeComputations.","code":"@Manual{,   title = {microbiomeComputations: Compute Results for Microbiome Analyses},   author = {Danielle Callan and Ann Blevins},   year = {2025},   note = {R package version 5.1.3},   url = {https://github.com/microbiomeDB/microbiomeComputations}, }"},{"path":"https://microbiomedb.github.io/microbiomeComputations/index.html","id":"microbiomecomputations","dir":"","previous_headings":"","what":"Compute Results for Microbiome Analyses","title":"Compute Results for Microbiome Analyses","text":"microbiomeComputations R package provides helper functions performing common analyses microbiome data. results available json, optionally data.table. package intended compliant API specified VEuPathDB/service-eda-compute. questions comments kind, join us Discord Community Server! ’d love hear .","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Compute Results for Microbiome Analyses","text":"Use R package remotes install microbiomeComputations. R command prompt:","code":"remotes::install_github('microbiomeDB/microbiomeComputations')"},{"path":"https://microbiomedb.github.io/microbiomeComputations/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Compute Results for Microbiome Analyses","text":"","code":"# df is a data frame of abundance values with samples as rows. One column should hold the sample id, all other columns are assumed to be taxa # the 'recordIdColumn' is the name of the column that contains the sample ids. # 'method' can be 'simpson', 'shannon', or 'evenness'. dt <- alphaDiv(df, recordIdColumn=\"entity.SampleID\", method='simpson')"},{"path":"https://microbiomedb.github.io/microbiomeComputations/index.html","id":"testing","dir":"","previous_headings":"","what":"Testing","title":"Compute Results for Microbiome Analyses","text":"package uses testthat package testing.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Compute Results for Microbiome Analyses","text":"Pull requests welcome made dev branch. major changes, please open issue first discuss like change. Please make sure update unit tests appropriate.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Compute Results for Microbiome Analyses","text":"Apache 2.0","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/AbsoluteAbundanceData-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Absolute Abundance Data — AbsoluteAbundanceData-class","title":"Absolute Abundance Data — AbsoluteAbundanceData-class","text":"class working count data microbial ecological assay.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/AbsoluteAbundanceData-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Absolute Abundance Data — AbsoluteAbundanceData-class","text":"data data.frame integer abundance counts species columns samples rows sampleMetadata data.frame metadata samples samples rows metadata variables columns recordIdColumn name column containing IDs samples. columns treated abundance values. ancestorIdColumns character vector column names representing parent entities recordIdColumn. imputeZero logical indicating whether NA/ null values replaced zeros.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/AbundanceData-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Abundance Data — AbundanceData-class","title":"Abundance Data — AbundanceData-class","text":"class working microbiome ecological abundance data.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/AbundanceData-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Abundance Data — AbundanceData-class","text":"data data.frame abundance values species columns samples rows sampleMetadata SampleMetadata object metadata samples samples rows metadata variables columns recordIdColumn name column containing IDs samples. columns treated abundance values. ancestorIdColumns character vector column names representing parent entities recordIdColumn. imputeZero logical indicating whether NA/ null values replaced zeros. removeEmptyRecords logical indicating whether empty (NA/ zero) samples removed.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/Comparator-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparator — Comparator-class","title":"Comparator — Comparator-class","text":"class representing variable used compare samples two groups. variable's values used split samples groups.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/Comparator-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Comparator — Comparator-class","text":"variable VariableMetadata groupA BinList groupB BinList","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/Comparator-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Get labels from a group in a Comparator — getGroupLabels","title":"Get labels from a group in a Comparator — getGroupLabels","text":"Comparator object, returns bin labels either groupA groupB","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/Comparator-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get labels from a group in a Comparator — getGroupLabels","text":"","code":"getGroupLabels(object, group = c(\"groupA\", \"groupB\"))  # S4 method for class 'Comparator' getGroupLabels(object, group = c(\"groupA\", \"groupB\"))"},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/Comparator-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get labels from a group in a Comparator — getGroupLabels","text":"object Comparator group String, either \"groupA\" \"groupB\"","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/Comparator-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get labels from a group in a Comparator — getGroupLabels","text":"charactor vector labels groupA groupB","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/DifferentialAbundanceResult-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Result — DifferentialAbundanceResult-class","title":"Differential Abundance Result — DifferentialAbundanceResult-class","text":"DifferentialAbundanceResult object contains results differential abundance analysis.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/DifferentialAbundanceResult-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Differential Abundance Result — DifferentialAbundanceResult-class","text":"effectSizeLabel label effect size metric used. Default 'log2(Fold Change)'. statistics data frame containing statistics pValueFloor p-value floor. p-values less set value. adjustedPValueFloor adjusted p-value floor.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/alphaDiv-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Alpha diversity — alphaDiv","title":"Alpha diversity — alphaDiv","text":"function returns alpha diversity values sample.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/alphaDiv-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alpha diversity — alphaDiv","text":"","code":"alphaDiv(   data,   method = c(\"shannon\", \"simpson\", \"evenness\"),   verbose = c(TRUE, FALSE) )  # S4 method for class 'AbundanceData' alphaDiv(   data,   method = c(\"shannon\", \"simpson\", \"evenness\"),   verbose = c(TRUE, FALSE) )"},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/alphaDiv-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alpha diversity — alphaDiv","text":"data AbundanceData object method string defining alpha diversity method. Accepted values 'shannon','simpson', 'evenness' verbose boolean indicating timed logging desired","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/alphaDiv-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alpha diversity — alphaDiv","text":"ComputeResult object","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/betaDiv-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta diversity — betaDiv","title":"Beta diversity — betaDiv","text":"function returns pcoa coordinates calculated beta diversity dissimilarity matrix.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/betaDiv-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta diversity — betaDiv","text":"","code":"betaDiv(   data,   method = c(\"bray\", \"jaccard\", \"jsd\"),   k = 2,   verbose = c(TRUE, FALSE) )  # S4 method for class 'AbundanceData' betaDiv(   data,   method = c(\"bray\", \"jaccard\", \"jsd\"),   k = 2,   verbose = c(TRUE, FALSE) )"},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/betaDiv-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta diversity — betaDiv","text":"data AbundanceData object method string defining beta diversity dissimilarity method. Accepted values 'bray','jaccard', 'jsd' k integer determining number pcoa axes return verbose boolean indicating timed logging desired","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/betaDiv-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Beta diversity — betaDiv","text":"ComputeResult object","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/getAbundances.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data.table of abundances from AbundanceData — getAbundances","title":"Get data.table of abundances from AbundanceData — getAbundances","text":"Returns data.table abundances, respecting imputeZero slot.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/getAbundances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data.table of abundances from AbundanceData — getAbundances","text":"","code":"getAbundances(   object,   ignoreImputeZero = c(FALSE, TRUE),   includeIds = c(TRUE, FALSE),   verbose = c(TRUE, FALSE) )  # S4 method for class 'AbundanceData' getAbundances(   object,   ignoreImputeZero = c(FALSE, TRUE),   includeIds = c(TRUE, FALSE),   verbose = c(TRUE, FALSE) )"},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/getAbundances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data.table of abundances from AbundanceData — getAbundances","text":"object AbundanceData ignoreImputeZero boolean indicating whether respect imputeZero slot includeIds boolean indicating whether include recordIdColumn ancestorIdColumns verbose boolean indicating timed logging desired","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/getAbundances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data.table of abundances from AbundanceData — getAbundances","text":"data.table abundances","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/internalDiffAbund-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential abundance — internalDiffAbund","title":"Differential abundance — internalDiffAbund","text":"function returns fold change associated p value differential abundance analysis comparing samples two groups.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/internalDiffAbund-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential abundance — internalDiffAbund","text":"","code":"internalDiffAbund(   data,   comparator,   method = c(\"DESeq2\", \"Maaslin2\"),   pValueFloor = P_VALUE_FLOOR,   verbose = c(TRUE, FALSE) )  # S4 method for class 'AbundanceData,Comparator' internalDiffAbund(   data,   comparator,   method = c(\"DESeq2\", \"Maaslin2\"),   pValueFloor = P_VALUE_FLOOR,   verbose = c(TRUE, FALSE) )"},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/internalDiffAbund-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential abundance — internalDiffAbund","text":"data AbsoluteAbundanceData object comparator Comparator object specifying variable values bins used dividing samples groups. method string defining differential abundance method. Accepted values 'DESeq2' 'Maaslin2'. pValueFloor numeric value indicates smallest p value returned. corresponding adjusted p value floor also updated based value, set maximum adjusted p value floored p values. default value uses P_VALUE_FLOOR=1e-200 constant defined package. verbose boolean indicating timed logging desired","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/internalDiffAbund-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential abundance — internalDiffAbund","text":"ComputeResult object","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/microbiomeComputations-package.html","id":null,"dir":"Reference","previous_headings":"","what":"microbiomeComputations: Compute Results for Microbiome Analyses — microbiomeComputations-package","title":"microbiomeComputations: Compute Results for Microbiome Analyses — microbiomeComputations-package","text":"microbiomeComputations provides helper functions performing common analyses microbiome data. results available json, optionally `data.table`. package intended compliant API specified VEuPathDB/service-eda-compute.","code":""},{"path":[]},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/microbiomeComputations-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"microbiomeComputations: Compute Results for Microbiome Analyses — microbiomeComputations-package","text":"Maintainer: Danielle Callan dcallan@upenn.edu Authors: Ann Blevins annsize@upenn.edu","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/rankedAbundance-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Ranked abundance — rankedAbundance","title":"Ranked abundance — rankedAbundance","text":"function returns abundances, ranked selected ranking function","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/rankedAbundance-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ranked abundance — rankedAbundance","text":"","code":"rankedAbundance(   data,   method = c(\"median\", \"max\", \"q3\", \"variance\"),   cutoff = 10,   verbose = c(TRUE, FALSE) )  # S4 method for class 'AbundanceData' rankedAbundance(   data,   method = c(\"median\", \"max\", \"q3\", \"variance\"),   cutoff = 10,   verbose = c(TRUE, FALSE) )"},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/rankedAbundance-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ranked abundance — rankedAbundance","text":"data AbundanceData object method string defining ranking strategy order taxa. Accepted values 'median','max','q3','variance'. Note taxa return value 0 given method included results. cutoff integer indicating maximium number taxa kept ranking. verbose boolean indicating timed logging desired","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/rankedAbundance-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ranked abundance — rankedAbundance","text":"ComputeResult object","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/removeIncompleteSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop samples with incomplete SampleMetadata — removeIncompleteSamples","title":"Drop samples with incomplete SampleMetadata — removeIncompleteSamples","text":"Modifies data sampleMetadata slots AbundanceData object, exclude samples missing SampleMetadata specified column.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/removeIncompleteSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop samples with incomplete SampleMetadata — removeIncompleteSamples","text":"","code":"removeIncompleteSamples(   object,   colName = character(),   verbose = c(TRUE, FALSE) )  # S4 method for class 'AbundanceData' removeIncompleteSamples(   object,   colName = character(),   verbose = c(TRUE, FALSE) )"},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/removeIncompleteSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop samples with incomplete SampleMetadata — removeIncompleteSamples","text":"object AbundanceData colName String providing column name SampleMetadata check completeness verbose boolean indicating timed logging desired","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/removeIncompleteSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop samples with incomplete SampleMetadata — removeIncompleteSamples","text":"AbundanceData modified data sampleMetadata slots","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/selfCorrelation-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Self Correlation — selfCorrelation,AbundanceData-method","title":"Self Correlation — selfCorrelation,AbundanceData-method","text":"function returns correlation coefficients variables one AbundanceData object . generally serves convenience wrapper around veupathUtils::correlation, exception additionally supports sparcc.","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/selfCorrelation-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Self Correlation — selfCorrelation,AbundanceData-method","text":"","code":"# S4 method for class 'AbundanceData' selfCorrelation(   data,   method = c(\"spearman\", \"pearson\", \"sparcc\"),   format = c(\"ComputeResult\", \"data.table\"),   verbose = c(TRUE, FALSE),   proportionNonZeroThreshold = 0.5,   varianceThreshold = 0,   stdDevThreshold = 0 )"},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/selfCorrelation-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Self Correlation — selfCorrelation,AbundanceData-method","text":"data AbundanceData object method string defining type correlation run. currently supported values 'spearman','pearson' 'sparcc' format string defining desired format result. currently supported values 'data.table' 'ComputeResult'. verbose boolean indicating timed logging desired proportionNonZeroThreshold numeric threshold filter features proportion non-zero values across samples varianceThreshold numeric threshold filter features variance across samples stdDevThreshold numeric threshold filter features standard deviation across samples","code":""},{"path":"https://microbiomedb.github.io/microbiomeComputations/reference/selfCorrelation-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Self Correlation — selfCorrelation,AbundanceData-method","text":"ComputeResult object","code":""}]
